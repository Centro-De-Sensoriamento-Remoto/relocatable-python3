Index: cpython/Lib/test/test_site.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cpython/Lib/test/test_site.py	(date 1529242244000)
+++ cpython/Lib/test/test_site.py	(date 1529242244000)
@@ -267,7 +267,7 @@
         if os.sep == '/':
             # OS X, Linux, FreeBSD, etc
             self.assertEqual(len(dirs), 1)
-            wanted = os.path.join('xoxo', 'lib',
+            wanted = os.path.join('xoxo', 'lib64',
                                   'python%d.%d' % sys.version_info[:2],
                                   'site-packages')
             self.assertEqual(dirs[0], wanted)
@@ -275,7 +275,7 @@
             # other platforms
             self.assertEqual(len(dirs), 2)
             self.assertEqual(dirs[0], 'xoxo')
-            wanted = os.path.join('xoxo', 'lib', 'site-packages')
+            wanted = os.path.join('xoxo', 'lib64', 'site-packages')
             self.assertEqual(dirs[1], wanted)
 
 class PthFile(object):
Index: cpython/Lib/site.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cpython/Lib/site.py	(date 1529242244000)
+++ cpython/Lib/site.py	(date 1529242244000)
@@ -335,7 +335,7 @@
         seen.add(prefix)
 
         if os.sep == '/':
-            sitepackages.append(os.path.join(prefix, "lib",
+            sitepackages.append(os.path.join(prefix, "lib64",
                                         "python%d.%d" % sys.version_info[:2],
                                         "site-packages"))
         else:
Index: cpython/Lib/distutils/tests/test_install.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cpython/Lib/distutils/tests/test_install.py	(date 1529242244000)
+++ cpython/Lib/distutils/tests/test_install.py	(date 1529242244000)
@@ -56,7 +56,7 @@
             expected = os.path.normpath(expected)
             self.assertEqual(got, expected)
 
-        libdir = os.path.join(destination, "lib", "python")
+        libdir = os.path.join(destination, "lib64", "python")
         check_path(cmd.install_lib, libdir)
         check_path(cmd.install_platlib, libdir)
         check_path(cmd.install_purelib, libdir)
Index: cpython/Lib/distutils/command/install.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cpython/Lib/distutils/command/install.py	(date 1529242244000)
+++ cpython/Lib/distutils/command/install.py	(date 1529242244000)
@@ -29,15 +29,15 @@
 
 INSTALL_SCHEMES = {
     'unix_prefix': {
-        'purelib': '$base/lib/python$py_version_short/site-packages',
-        'platlib': '$platbase/lib/python$py_version_short/site-packages',
+        'purelib': '$base/lib64/python$py_version_short/site-packages',
+        'platlib': '$platbase/lib64/python$py_version_short/site-packages',
         'headers': '$base/include/python$py_version_short$abiflags/$dist_name',
         'scripts': '$base/bin',
         'data'   : '$base',
         },
     'unix_home': {
-        'purelib': '$base/lib/python',
-        'platlib': '$base/lib/python',
+        'purelib': '$base/lib64/python',
+        'platlib': '$base/lib64/python',
         'headers': '$base/include/python/$dist_name',
         'scripts': '$base/bin',
         'data'   : '$base',
Index: cpython/Lib/distutils/sysconfig.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cpython/Lib/distutils/sysconfig.py	(date 1529242244000)
+++ cpython/Lib/distutils/sysconfig.py	(date 1529242244000)
@@ -147,7 +147,7 @@
 
     if os.name == "posix":
         libpython = os.path.join(prefix,
-                                 "lib", "python" + get_python_version())
+                                 "lib64", "python" + get_python_version())
         if standard_lib:
             return libpython
         else:
Index: cpython/Lib/sysconfig.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cpython/Lib/sysconfig.py	(date 1529242244000)
+++ cpython/Lib/sysconfig.py	(date 1529242244000)
@@ -20,10 +20,10 @@
 
 _INSTALL_SCHEMES = {
     'posix_prefix': {
-        'stdlib': '{installed_base}/lib/python{py_version_short}',
-        'platstdlib': '{platbase}/lib/python{py_version_short}',
-        'purelib': '{base}/lib/python{py_version_short}/site-packages',
-        'platlib': '{platbase}/lib/python{py_version_short}/site-packages',
+        'stdlib': '{installed_base}/lib64/python{py_version_short}',
+        'platstdlib': '{platbase}/lib64/python{py_version_short}',
+        'purelib': '{base}/lib64/python{py_version_short}/site-packages',
+        'platlib': '{platbase}/lib64/python{py_version_short}/site-packages',
         'include':
             '{installed_base}/include/python{py_version_short}{abiflags}',
         'platinclude':
@@ -32,10 +32,10 @@
         'data': '{base}',
         },
     'posix_home': {
-        'stdlib': '{installed_base}/lib/python',
-        'platstdlib': '{base}/lib/python',
-        'purelib': '{base}/lib/python',
-        'platlib': '{base}/lib/python',
+        'stdlib': '{installed_base}/lib64/python',
+        'platstdlib': '{base}/lib64/python',
+        'purelib': '{base}/lib64/python',
+        'platlib': '{base}/lib64/python',
         'include': '{installed_base}/include/python',
         'platinclude': '{installed_base}/include/python',
         'scripts': '{base}/bin',
@@ -62,10 +62,10 @@
         'data': '{userbase}',
         },
     'posix_user': {
-        'stdlib': '{userbase}/lib/python{py_version_short}',
-        'platstdlib': '{userbase}/lib/python{py_version_short}',
-        'purelib': '{userbase}/lib/python{py_version_short}/site-packages',
-        'platlib': '{userbase}/lib/python{py_version_short}/site-packages',
+        'stdlib': '{userbase}/lib64/python{py_version_short}',
+        'platstdlib': '{userbase}/lib64/python{py_version_short}',
+        'purelib': '{userbase}/lib64/python{py_version_short}/site-packages',
+        'platlib': '{userbase}/lib64/python{py_version_short}/site-packages',
         'include': '{userbase}/include/python{py_version_short}',
         'scripts': '{userbase}/bin',
         'data': '{userbase}',
--- Python-3.8.0/Modules/getpath.c      2019-10-14 16:34:47.000000000 +0300
+++ Python-3.8.0/Modules/getpath.c      2019-12-04 12:16:59.311280974 +0200
@@ -730,7 +730,7 @@
         if (safe_wcscpy(exec_prefix, calculate->exec_prefix, exec_prefix_len) < 0) {
             return PATHLEN_ERR();
         }
-        status = joinpath(exec_prefix, L"lib/lib-dynload", exec_prefix_len);
+        status = joinpath(exec_prefix, L"lib64/lib-dynload", exec_prefix_len);
         if (_PyStatus_EXCEPTION(status)) {
             return status;
         }
@@ -1067,7 +1067,7 @@
             return PATHLEN_ERR();
         }
     }
-    status = joinpath(zip_path, L"lib/python00.zip", zip_path_len);
+    status = joinpath(zip_path, L"lib64/python00.zip", zip_path_len);
     if (_PyStatus_EXCEPTION(status)) {
         return status;
     }
@@ -1197,7 +1197,7 @@
     if (!calculate->exec_prefix) {
         return DECODE_LOCALE_ERR("EXEC_PREFIX define", len);
     }
-    calculate->lib_python = Py_DecodeLocale("lib/python" VERSION, &len);
+    calculate->lib_python = Py_DecodeLocale("lib64/python" VERSION, &len);
     if (!calculate->lib_python) {
         return DECODE_LOCALE_ERR("EXEC_PREFIX define", len);
     }
--- Python-3.8.0/Modules/Setup  2019-10-14 16:34:47.000000000 +0300
+++ Python-3.8.0/Modules/Setup  2019-12-04 12:22:31.328442449 +0200
@@ -334,7 +334,7 @@
 # Andrew Kuchling's zlib module.
 # This require zlib 1.1.3 (or later).
 # See http://www.gzip.org/zlib/
-#zlib zlibmodule.c -I$(prefix)/include -L$(exec_prefix)/lib -lz
+zlib zlibmodule.c -I$(prefix)/include -L$(exec_prefix)/lib64 -lz
 
 # Interface to the Expat XML parser
 # More information on Expat can be found at www.libexpat.org.

Index: cpython/setup.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cpython/setup.py	(date 1529242244000)
+++ cpython/setup.py	(date 1529242244000)
@@ -564,7 +594,7 @@
 
         if multiarch_path_component != '':
             add_dir_to_list(self.compiler.library_dirs,
-                            '/usr/lib/' + multiarch_path_component)
+                            '/usr/lib64/' + multiarch_path_component)
             add_dir_to_list(self.compiler.include_dirs,
                             '/usr/include/' + multiarch_path_component)
             return
@@ -585,7 +585,7 @@
                 with open(tmpfile) as fp:
                     multiarch_path_component = fp.readline().strip()
                 add_dir_to_list(self.compiler.library_dirs,
-                                '/usr/lib/' + multiarch_path_component)
+                                '/usr/lib64/' + multiarch_path_component)
                 add_dir_to_list(self.compiler.include_dirs,
                                 '/usr/include/' + multiarch_path_component)
         finally:
@@ -649,7 +649,7 @@
         # directories (i.e. '.' and 'Include') must be first.  See issue
         # 10520.
         if not CROSS_COMPILING:
-            add_dir_to_list(self.compiler.library_dirs, '/usr/local/lib')
+            add_dir_to_list(self.compiler.library_dirs, '/usr/local/lib64')
             add_dir_to_list(self.compiler.include_dirs, '/usr/local/include')
         # only change this for cross builds for 3.3, issues on Mageia
         if CROSS_COMPILING:
@@ -953,11 +953,11 @@
             elif curses_library:
                 readline_libs.append(curses_library)
             elif self.compiler.find_library_file(self.lib_dirs +
-                                                     ['/usr/lib/termcap'],
+                                                     ['/usr/lib64/termcap'],
                                                      'termcap'):
                 readline_libs.append('termcap')
             self.add(Extension('readline', ['readline.c'],
-                               library_dirs=['/usr/lib/termcap'],
+                               library_dirs=['/usr/lib64/termcap'],
                                extra_link_args=readline_extra_link_args,
                                libraries=readline_libs))
         else:
Index: cpython/configure
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cpython/configure	(date 1529242244000)
+++ cpython/configure	(date 1529242244000)
@@ -15182,9 +15182,9 @@
 
 
 if test x$PLATFORM_TRIPLET = x; then
-  LIBPL='$(prefix)'"/lib/python${VERSION}/config-${LDVERSION}"
+  LIBPL='$(prefix)'"/lib64/python${VERSION}/config-${LDVERSION}"
 else
-  LIBPL='$(prefix)'"/lib/python${VERSION}/config-${LDVERSION}-${PLATFORM_TRIPLET}"
+  LIBPL='$(prefix)'"/lib64/python${VERSION}/config-${LDVERSION}-${PLATFORM_TRIPLET}"
 fi
 
 
Index: cpython/Makefile.pre.in
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cpython/Makefile.pre.in	(date 1529242244000)
+++ cpython/Makefile.pre.in	(date 1529242244000)
@@ -143,7 +143,7 @@
 MANDIR=		@mandir@
 INCLUDEDIR=	@includedir@
 CONFINCLUDEDIR=	$(exec_prefix)/include
-SCRIPTDIR=	$(prefix)/lib
+SCRIPTDIR=	$(prefix)/lib64
 ABIFLAGS=	@ABIFLAGS@
 
 # Detailed destination directories

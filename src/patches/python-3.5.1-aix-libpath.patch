diff --git a/Modules/_posixsubprocess.c b/Modules/_posixsubprocess.c
index 2cdc381..d64de44 100644
--- a/Modules/_posixsubprocess.c
+++ b/Modules/_posixsubprocess.c
@@ -488,6 +488,7 @@ child_exec(char *const exec_array[],
     /* This loop matches the Lib/os.py _execvpe()'s PATH search when */
     /* given the executable_list generated by Lib/subprocess.py.     */
     saved_errno = 0;
+    unsetenv("LIBPATH");
     for (i = 0; exec_array[i] != NULL; ++i) {
         const char *executable = exec_array[i];
         if (envp) {
diff --git a/Modules/posixmodule.c b/Modules/posixmodule.c
index 854a749..55fbd50 100644
--- a/Modules/posixmodule.c
+++ b/Modules/posixmodule.c
@@ -4265,6 +4265,7 @@ os_system_impl(PyModuleDef *module, Py_UNICODE *command)
 {
     long result;
     Py_BEGIN_ALLOW_THREADS
+    unsetenv("LIBPATH");
     result = _wsystem(command);
     Py_END_ALLOW_THREADS
     return result;
@@ -4963,15 +4964,17 @@ parse_envlist(PyObject* env, Py_ssize_t *envc_ptr)
         v = PyBytes_AsString(val2);
         len = PyBytes_GET_SIZE(key2) + PyBytes_GET_SIZE(val2) + 2;
 
-        p = PyMem_NEW(char, len);
-        if (p == NULL) {
-            PyErr_NoMemory();
-            Py_DECREF(key2);
-            Py_DECREF(val2);
-            goto error;
+        if (strcmp(k, "LIBPATH") != 0) {
+            p = PyMem_NEW(char, len);
+            if (p == NULL) {
+                PyErr_NoMemory();
+                Py_DECREF(key2);
+                Py_DECREF(val2);
+                goto error;
+            }
+            PyOS_snprintf(p, len, "%s=%s", k, v);
+            envlist[envc++] = p;
         }
-        PyOS_snprintf(p, len, "%s=%s", k, v);
-        envlist[envc++] = p;
         Py_DECREF(key2);
         Py_DECREF(val2);
     }
@@ -5061,6 +5064,7 @@ os_execv_impl(PyModuleDef *module, PyObject *path, PyObject *argv)
         return NULL;
     }
 
+    unsetenv("LIBPATH");
     execv(path_char, argvlist);
 
     /* If we get here it's definitely an error */
@@ -5202,6 +5206,7 @@ os_spawnv_impl(PyModuleDef *module, int mode, PyObject *path, PyObject *argv)
     if (mode == _OLD_P_OVERLAY)
         mode = _P_OVERLAY;
 
+    unsetenv("LIBPATH");
     Py_BEGIN_ALLOW_THREADS
     spawnval = _spawnv(mode, path_char, argvlist);
     Py_END_ALLOW_THREADS

Index: cpython/Lib/subprocess.py
--- cpython/Lib/subprocess.py	(date 1544947261000)
+++ cpython/Lib/subprocess.py	(date 1544947261000)
@@ -1404,10 +1404,11 @@
                     if env is not None:
                         env_list = []
                         for k, v in env.items():
-                            k = os.fsencode(k)
-                            if b'=' in k:
-                                raise ValueError("illegal environment variable name")
-                            env_list.append(k + b'=' + os.fsencode(v))
+                            if k != 'LIBPATH':
+                                k = os.fsencode(k)
+                                if b'=' in k:
+                                    raise ValueError("illegal environment variable name")
+                                env_list.append(k + b'=' + os.fsencode(v))
                     else:
                         env_list = None  # Use execv instead of execve.
                     executable = os.fsencode(executable)
Index: cpython/Modules/posixmodule.c
--- cpython/Modules/posixmodule.c	(date 1528994252000)
+++ cpython/Modules/posixmodule.c	(date 1528994252000)
@@ -4173,6 +4173,7 @@
 /*[clinic end generated code: output=96c4dffee36dfb48 input=303f5ce97df606b0]*/
 {
     long result;
+    unsetenv("LIBPATH");
     Py_BEGIN_ALLOW_THREADS
     _Py_BEGIN_SUPPRESS_IPH
     result = _wsystem(command);
@@ -4194,6 +4195,7 @@
 /*[clinic end generated code: output=290fc437dd4f33a0 input=86a58554ba6094af]*/
 {
     long result;
+    unsetenv("LIBPATH");
     const char *bytes = PyBytes_AsString(command);
     Py_BEGIN_ALLOW_THREADS
     result = system(bytes);
@@ -4840,7 +4842,8 @@
     PyObject *keys=NULL, *vals=NULL;
     PyObject *key, *val, *key2, *val2, *keyval;
     EXECV_CHAR **envlist;
-
+    
+    PyMapping_DelItemString(env, "LIBPATH");
     i = PyMapping_Size(env);
     if (i < 0)
         return NULL;
@@ -5004,7 +5007,7 @@
         free_string_array(argvlist, argc);
         return NULL;
     }
-
+    unsetenv("LIBPATH");
     _Py_BEGIN_SUPPRESS_IPH
 #ifdef HAVE_WEXECV
     _wexecv(path->wide, argvlist);
@@ -5175,6 +5178,7 @@
     if (mode == _OLD_P_OVERLAY)
         mode = _P_OVERLAY;
 
+    unsetenv("LIBPATH");
     Py_BEGIN_ALLOW_THREADS
     _Py_BEGIN_SUPPRESS_IPH
 #ifdef HAVE_WSPAWNV

Index: cpython/Modules/_posixsubprocess.c
--- cpython/Modules/_posixsubprocess.c  (date 1528992991000)
+++ cpython/Modules/_posixsubprocess.c  (date 1528992991000)
@@ -493,7 +493,7 @@
         /* TODO HP-UX could use pstat_getproc() if anyone cares about it. */
         _close_open_fds(3, py_fds_to_keep);
     }
-
+    unsetenv("LIBPATH");
     /* This loop matches the Lib/os.py _execvpe()'s PATH search when */
     /* given the executable_list generated by Lib/subprocess.py.     */
     saved_errno = 0;
@@ -645,6 +645,15 @@
             goto cleanup;
     }
 
+    if (env_list != Py_None) {
+        PyObject* pathlib_name = PyUnicode_FromString("LIBPATH");
+        Py_ssize_t pathlib_index = PySequence_Index(env_list, pathlib_name);
+        while (pathlib_index > -1) {
+            PySequence_DelItem(env_list, pathlib_index);
+            pathlib_index = PySequence_Index(env_list, pathlib_name);
+        }
+        Py_DECREF(pathlib_name);
+    }
     if (env_list != Py_None) {
         envp = _PySequence_BytesToCharpArray(env_list);
         if (!envp)

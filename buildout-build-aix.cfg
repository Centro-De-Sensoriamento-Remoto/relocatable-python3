[buildout]
extends = buildout-build.cfg
parts = zlib libiconv xz ncurses readline openssl openssh gettext bzip2 sqlite3 libxml2 libxslt libffi gdbm
        cyrus-sasl libevent libev zeromq openldap python

[environment]
CC = gcc -static-libgcc -fPIC
LDFLAGS = -L${options:prefix}/lib -Wl,-blibpath:/usr/lib
SHARED_LDFLAGS = -L${options:prefix}/lib -Wl,-blibpath:/usr/lib
LIBPATH = -L${options:prefix}/lib
CFLAGS = -I${options:prefix}/include
; -DSYSV -D_AIX -D_AIX32 -D_AIX41 -D_AIX43 -D_AIX51 -D_AIX52 -D_AIX53 -D_AIX61 -D_AIX71 -D_ALL_SOURCE -DFUNCPROTO=15
CPPFLAGS = ${:CFLAGS}
# The *_LIBRARY_PATH definitions cause built-in executables that we run to link against our new shared objects which doesn't work
DYLD_LIBRARY_PATH =
LD_LIBRARY_PATH = 

[ncurses]
# removed with-shared due to error in configure: "Shared libraries are not supported in this version"
configure-options = ${options:configure-options} --disable-big-core --disable-root-environ --disable-macros --disable-rpath --disable-largefile --without-ada --without-cxx-binding --with-terminfo-dirs=/etc/terminfo:/lib/terminfo:/usr/share/terminfo CPPFLAGS="-P"

[readline-environment]
# TODO(fanchi) - 05/Feb/2019: relocatable path during dump equals full absolute path, need to change it to .:../lib probably using blibpath
LDFLAGS = -L${options:prefix}/lib -lncurses
LD_LIBRARY_PATH = ${options:prefix}/lib

[readline]
environment-section = readline-environment

[libxml2]
# Appearantly HP-UX and AIX are exotic: https://www.mail-archive.com/search?l=xml@gnome.org&q=subject:%22%5C%5Bxml%5C%5D+libxml2%22&o=newest&f=1
patches = ${:patches-dir}/${:name}-${:version}-xpath-exotic.patch

[openssl]
# Version held back due to numerous problems
# OpenSSL's configure doesn't respect CC/GCC env vars properly (it only decides which compiler to use according to which is defined, but doesn't use the flags).
# we pass the compiler and flags in the configure options instead, this overwrites any env var
# note that --shared doesn't actually work on aix
configure-options = --prefix=${options:prefix} --openssldir=/var/ssl/ --shared --libdir=lib gcc:"gcc -static-libgcc -fPIC"
# run "slibclean" before "make install", otherwise make install fails due to "files already in use"
make-binary = slibclean; make
openssldir = /var/ssl/
version = 1.0.2q
patches = ${:patches-dir}/${:name}-${:version}-Makefile.patch
          ${:patches-dir}/${:name}-${:version}-linux-ldflags.patch
          ${:patches-dir}/${:name}-${:version}-apps-Makefile.patch
          ${:patches-dir}/${:name}-${:version}-tools-Makefile.patch

[openssh-environment]
<= environment
# add . and .. as search paths, otherwise the wrong "buffer.h" (from openssl) will be used
CFLAGS = ${environment:CFLAGS} -I. -I.. -I${options:prefix}/include/openssl

[bzip2]
patches = ${:patches-dir}/${:name}-${:version}-unix-Makefile.patch

[libxslt]
name = libxslt
pre-configure-hook = ${options:hooks-dir}/unix.py:chmod_configure

[gettext]
configure-options = --prefix=${options:prefix} --disable-rpath --without-git --without-cvs --disable-openmp
environment-section = gnu-environment

[gnu-environment]
CFLAGS = ${environment:CFLAGS} -D_GNU_SOURCE
CPPFLAGS = ${:CFLAGS}

[gdbm]
configure-options += --disable-largefile

[libevent]
configure-options += --disable-libevent-regress
environment-section = libevent-environment

[libevent-environment]
<= environment
# define _EVENT_HAVE_FD_MASK, otherwise there is redefinition of type fd_mask
CFLAGS = ${environment:CFLAGS} -D_EVENT_HAVE_FD_MASK

[zeromq]
configure-options += --with-poller=poll --disable-pedantic --disable-Werror

[python]
environment-section = python-environment
configure-options = --prefix=${options:prefix} --enable-shared --enable-ipv6 --with-dbmliborder=ndbm:gdbm --with-gcc --with-system-ffi --libdir=${options:prefix}/lib --with-system-ffi --with-openssl=${options:prefix}
patches += ${:patches-dir}/${:name}-${:version}-aix-libpath.patch
post-make-hook = ${options:hooks-dir}/aix.py:python_post_make
# when building relocatable-python with an already-built relocatable python, LIBPATH from the environment section will
# not get to the configure command (probably because of the unsetenv trick in aix-libpath patch) - so we pass it directly to the
# command (otherwise some modules will fail to load properly after compilation and be renamed to *_failed.so)
configure-command = LIBPATH=${options:prefix}/lib ./configure


[python-environment]
<= environment
CFLAGS = ${environment:CFLAGS} -I${options:prefix}/include/graphviz -I${options:prefix}/include/libexslt -I${options:prefix}/include/libxml2 -I${options:prefix}/include/libxslt -I${options:prefix}/include/ncurses -I${options:prefix}/include/openssl -I${options:prefix}/include/readline -I${options:prefix}/include/sasl -I${options:prefix}/lib/libffi-${libffi:version}/include
LDFLAGS =  ${environment:LDFLAGS} -L${options:prefix}/lib/engines -L${options:prefix}/lib/gettext -L${options:prefix}/lib/graphviz -L${options:prefix}/lib/libxslt-plugins -L${options:prefix}/lib/pkgconfig -L${options:prefix}/lib/sasl2 -Wl,-blibpath:.:../lib:/usr/lib -lintl -Wl,-bbigtoc
# bbigtoc flag to linker should solve toc overflow
OPT = -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes
# LIBPATH is used as a runtime search path environment variable, and we define it so that the lib-dynload so's won't fail to load
# In the global 'environment' section it's defined differently, because some modules use it for ld flags
LIBPATH = ${options:prefix}/lib
# we also need LD_LIBRARY_PATH in order to compile the modules against our libs. See comment above about why we don't
# want it always
LD_LIBRARY_PATH = ${options:prefix}/lib

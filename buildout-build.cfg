[buildout]
develop = .

installed = .installed-build.cfg

parts = zlib libiconv xz ncurses readline openssl openssh gettext bzip2 sqlite3 libxml2 libxslt libffi gdbm
        cyrus-sasl libevent libev zeromq openldap graphviz libuuid python

# location of the download cache is specified by the download-cache option
download-cache = .cache

log-level = DEBUG

[options]
keep-compile-dir = true
configure-options = --prefix=${options:prefix} --disable-rpath
prefix = ${buildout:directory}/dist
patches-dir = ${buildout:directory}/src/patches
patch-options = -p1
hooks-dir = ${buildout:directory}/src/hooks
environment-section = environment
ignore-existing = true
py_major = 3.7

[options-no-rpath]
<= options
configure-options = --prefix=${options:prefix}

[urls]
gnu = ${urls:source}
source = ftp://python.infinidat.com/python/sources

[gnu]
name = ${:_buildout_section_name_}
url = ${urls:gnu}/${:name}-${:version}.tar.gz

[environment]
# might need -static-libstdc++ in CXX for gettext and zeromq
CC = gcc -static-libgcc -fPIC
LDFLAGS = -L${options:prefix}/lib -Wl,-rpath,\$$ORIGIN,-rpath,\$$ORIGIN/../lib,-rpath-link,\$$ORIGIN,-rpath-link,\$$ORIGIN/../lib
SHARED_LDFLAGS = -L${options:prefix}/lib -Wl,-rpath,\$$ORIGIN,-rpath,\$$ORIGIN/../lib,-rpath-link,\$$ORIGIN,-rpath-link,\$$ORIGIN/../lib
CFLAGS = -I${options:prefix}/include
CPPFLAGS = ${:CFLAGS}
LIBPATH = -L${options:prefix}/lib
DYLD_LIBRARY_PATH = ${options:prefix}/lib
LD_LIBRARY_PATH = ${:DYLD_LIBRARY_PATH}
PKG_CONFIG_PATH = ${options:prefix}/lib/pkgconfig
LC_ALL = en_US.UTF-8
COMPATINCLUDEDIR = ${options:prefix}/include
ORIGIN = $ORIGIN
O = $$O

[gnu-environment]
<= environment
CFLAGS = ${environment:CFLAGS} -D_GNU_SOURCE
CPPFLAGS = ${:CFLAGS}

[readline-environment]
<= environment
LDFLAGS = ${environment:LDFLAGS} -lncurses

[openssh-environment]
<= environment
CFLAGS = ${environment:CFLAGS} -I${options:prefix}/include/openssl

[libxslt-environment]
<= environment
CFLAGS = ${environment:CFLAGS} -I${options:prefix}/include/libxml2

[python-environment]
<= environment
CFLAGS = ${environment:CFLAGS} -I${options:prefix}/include/graphviz -I${options:prefix}/include/libexslt -I${options:prefix}/include/libxml2 -I${options:prefix}/include/libxslt -I${options:prefix}/include/ncurses -I${options:prefix}/include/openssl -I${options:prefix}/include/readline -I${options:prefix}/include/sasl -I${options:prefix}/lib/libffi-${libffi:version}/include -I${options:prefix}/include/uuid
CPPFLAGS = ${:CFLAGS}
LDFLAGS = ${environment:LDFLAGS} -Wl,-rpath,\$$ORIGIN/../.. -L${options:prefix}/lib/engines -L${options:prefix}/lib/gettext -L${options:prefix}/lib/graphviz -L${options:prefix}/lib/libxslt-plugins -L${options:prefix}/lib/pkgconfig -L${options:prefix}/lib/sasl2

[zlib]
<= options-no-rpath
recipe = hexagonit.recipe.cmmi
version = 1.2.11
name = zlib
url = ${urls:source}/${:name}-${:version}.tar.gz
configure-options += --static

[xz]
<= options
recipe = hexagonit.recipe.cmmi
version = 5.2.4
url = ${urls:source}/xz-${:version}.tar.gz
# libintl is provided by gettext package, libintl-3 is provided by gettext 0.14 and above
configure-options += --with-pic --disable-dependency-tracking --with-libintl-prefix=${:prefix}
                     --with-libiconv-prefix=${:prefix}

# "-P" Inhibit generation of linemarkers in the output from the preprocessor. This might be useful when
# running the preprocessor on something that is not C code,
# and will be sent to a program which might be confused by the linemarkers. This is a known issue for ncurses.
[ncurses]
<= options
   gnu
recipe = hexagonit.recipe.cmmi
version = 5.9
configure-options = ${options:configure-options} --disable-big-core --disable-root-environ --disable-macros
                    --disable-rpath --with-shared --disable-largefile --without-ada --without-cxx-binding
                    --with-terminfo-dirs=/etc/terminfo:/lib/terminfo:/usr/share/terminfo
                    --disable-mixed-case CPPFLAGS="-P"

[readline]
<= options-no-rpath
   gnu
recipe = hexagonit.recipe.cmmi
version = 7.0
environment-section = readline-environment
configure-options += --with-curses
patch-options = -p0
patches = ${:patches-dir}/${:name}-${:version}-001.patch
          ${:patches-dir}/${:name}-${:version}-002.patch
          ${:patches-dir}/${:name}-${:version}-003.patch
          ${:patches-dir}/${:name}-${:version}-004.patch
          ${:patches-dir}/${:name}-${:version}-005.patch

[openssl]
# OpenSSL is needed as a backend for openssh and as a backend for SSL lib in python3 (see --with-ssldir)
<= options
recipe = hexagonit.recipe.cmmi
name = openssl
version = 1.1.1d
url = ${urls:source}/${:name}-${:version}.tar.gz
openssldir = /etc/ssl
configure-command = ./config
configure-options = --prefix=${options:prefix} --openssldir=${:openssldir} --shared --libdir=lib -fPIC -Wl,-rpath,\$$ORIGIN/../lib -Wl,-rpath,\$$ORIGIN/../../lib
make-targets = all install_sw

[openssh]
<= options
recipe = hexagonit.recipe.cmmi
version = 7.9p1
name = openssh
url = ${urls:source}/${:name}-${:version}.tar.gz
environment-section = openssh-environment
configure-options = --prefix=${options:prefix} --without-rpath --without-openssl-header-check
                    --with-ssl-dir=${options:prefix}
# We use -nosysconf because we only need the lib and no system changes
make-targets = install-nosysconf
# the patch is to avoid permission errors when running without root

[cyrus-sasl]
<= options-no-rpath
recipe = hexagonit.recipe.cmmi
name = cyrus-sasl
version = 2.1.27
url = ${urls:source}/${:name}-${:version}.tar.gz
configure-options = --prefix=${options:prefix} --without-saslauthd --without-authdaemond --disable-java
                    --disable-dependency-tracking --disable-java --without-gdbm --without-dblib
                    --disable-macos-framework --enable-static --with-openssl=${options:prefix}
patches = ${:patches-dir}/${:name}-${:version}-makefile.patch
pre-make-hook = ${options:hooks-dir}/sasl.py:make

[openldap]
<= options-no-rpath
recipe = hexagonit.recipe.cmmi
version = 2.4.47
name = openldap
url = ${urls:source}/${:name}-${:version}.tgz
configure-options += --disable-slapd --disable-backends --enable-static --with-cyrus-sasl --enable-shared --with-pic --enable-dynamic --with-tls=openssl

[libiconv]
<= options
   gnu
recipe = hexagonit.recipe.cmmi
version = 1.16
configure-options += --enable-relocatable --enable-static --disable-dependency-tracking --with-pic
                     --with-libintl-prefix=${:prefix} --with-libiconv-prefix=${:prefix} --disable-debug 

[bzip2]
<= options
recipe = hexagonit.recipe.cmmi
name = bzip2
version = 1.0.6
url = ${urls:source}/${:name}-${:version}.tar.gz
configure-command = echo
make-options = PREFIX=${:prefix} DESTDIR=${:prefix}
patches = ${:patches-dir}/${:name}-${:version}-unix-Makefile.patch

[gettext]
<= options
   gnu
recipe = hexagonit.recipe.cmmi
version = 0.20.1
configure-options += --without-git --without-cvs --disable-openmp --with-libiconv-prefix=${:prefix} --enable-static --enable-shared --with-pic --enable-relocatable
environment-section = gettext-environment

[gettext-environment]
<= environment
LTNOUNDEF = -l:libstdc++.a

[sqlite3]
<= options-no-rpath
recipe = hexagonit.recipe.cmmi
version = autoconf-3280000
name = sqlite
url = ${urls:source}/${:name}-${:version}.tar.gz
configure-options += --enable-readline --enable-static --enable-shared --disable-dependency-tracking

[libxml2]
<= options-no-rpath
recipe = hexagonit.recipe.cmmi
version = 2.9.8
name = libxml2
url = ${urls:source}/${:name}-${:version}.tar.gz
configure-options += --without-python

[libxslt]
<= options-no-rpath
recipe = hexagonit.recipe.cmmi
version = 1.1.32
name = libxslt
url = ${urls:source}/${:name}-${:version}.tar.gz
configure-options += --without-python --without-plugins --with-libxml-prefix=${:prefix} --without-crypto
environment-section = libxslt-environment

[libffi]
<= options-no-rpath
recipe = hexagonit.recipe.cmmi
name = libffi
url = ${urls:source}/${:name}-${:version}.tar.gz
version = 3.2.1
configure-options += --disable-dependency-tracking --enable-portable-binary --with-pic

[gdbm]
<= options
   gnu
recipe = hexagonit.recipe.cmmi
version = 1.18.1
environment-section = gnu-environment
configure-options += --with-libintl-prefix=${:prefix} --with-libiconv-prefix=${:prefix} --disable-dependency-tracking
                     --enable-static --enable-shared --with-pic --enable-libgdbm-compat --disable-rpath

[libevent]
<= options-no-rpath
recipe = hexagonit.recipe.cmmi
version = 2.1.8
name = libevent
configure-options += --disable-samples
url = ${urls:source}/${:name}-${:version}-stable.tar.gz

[libev]
<= options-no-rpath
recipe = hexagonit.recipe.cmmi
version = 4.24
name = libev
url = ${urls:source}/${:name}-${:version}.tar.gz

[zeromq-environment]
<= environment
LIBZMQ_EXTRA_CXXFLAGS = -l:libstdc++.a

[zeromq]
<= options-no-rpath
recipe = hexagonit.recipe.cmmi
version = 4.2.5
name = zeromq
url = ${urls:source}/${:name}-${:version}.tar.gz
configure-options += --disable-dependency-tracking --enable-static --with-pic
patches = ${:patches-dir}/${:name}-${:version}-atomic_ptr.hpp.patch
environment-section = zeromq-environment

[graphviz]
<= options-no-rpath
recipe = hexagonit.recipe.cmmi
version = 2.40.1
name = graphviz
url = ${urls:source}/${:name}-${:version}.tar.gz
configure-options += --disable-dependency-tracking --enable-swig=no --enable-sharp=no --enable-guile=no
                     --enable-java=no --enable-lua=no --enable-ocaml=no --enable-perl=no --enable-php=no
                     --enable-python=no --enable-r=no --enable-ruby=no --enable-tcl=no --with-zlibdir=${:prefix}

[libuuid]
<= options-no-rpath
recipe = hexagonit.recipe.cmmi
version = 1.0.3
name = libuuid
url = ${urls:source}/${:name}-${:version}.tar.gz
configure-options += --disable-dependency-tracking --enable-static --enable-shared --with-pic

[python]
<= options-no-rpath
recipe = hexagonit.recipe.cmmi
name = python
major = ${options:py_major}
maintanance = 5
version = ${:major}.${:maintanance}
url = ${urls:source}/Python-${:version}.tgz
configure-options = --prefix=${options:prefix} --enable-shared --enable-ipv6 --with-dbmliborder=ndbm:gdbm --with-gcc
                    --with-system-ffi --with-openssl=${options:prefix}
environment-section = python-environment
patches = ${:patches-dir}/${:name}-${:major}-sysconfig.py.patch
    ${:patches-dir}/${:name}-${:major}-distutils-sysconfig.py.patch
    ${:patches-dir}/${:name}-${:major}-pythonhome-pythonrun.c.patch
    ${:patches-dir}/${:name}-${:major}-linux-symlink.patch
    ${:patches-dir}/${:name}-${:major}-old-gcc.patch
    ${:patches-dir}/${:name}-${:major}-gdbm.patch
post-make-hook = ${options:hooks-dir}/posix.py:python_post_make

# LTO flag can only be used on systems with ggc >= 4.9, enable-optimizations is not yet known for which toolchain
[python:'_WITH_LTO' in os.environ]
configure-options += --with-lto --enable-optimizations

# applying patch to python to detect ubuntu distro on ubuntu systems
[python:'ubuntu' in platform.version().lower()]
patches += ${:patches-dir}/${:name}-${:major}-ubuntu-platform.patch
# TODO(fanchi) - 05/Feb/2019: Fix openssl dependency and version checking on ubuntu 18.04 libssl is dependent on libcrypto which is looked for on the system
# https://github.com/openssl/openssl/issues/5845

[buildout]
extends = buildout-build.cfg
parts = mkdir zlib xz openssl bzip2 gettext tcl tcl-win tk tk-win sqlite3 sqlite3-win libxml2 libxml2-win libxslt libxslt-win libevent python python-win-instrumentation python-win

[environment-windows]
APPVER = 5.02
CPU = AMD64
TARGETOS = WINNT
FrameworkVersion = v4.0.30319
OS = Windows_NT
WinKitVersion = 10.0.10240.0
RegKeyPath = HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\14.0\VC
VSRegKeyPath = HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\14.0\VC
SystemDrive = C:
WinDir = ${:SystemDrive}\Windows
MSBuildExtensionsPath32 = ${:ProgramFiles}\MSBuild
VCTargetsPath = ${:MSBuildExtensionsPath32}\Microsoft.Cpp\v4.0\v140
ProgramFiles = ${:SystemDrive}\Program Files (x86)
ProgramFiles64 = ${:SystemDrive}\Program Files
ORIGINALPATH = ${:WinDir}\system32;${:WinDir};${:WinDir}\System32\Wbem;${:ProgramFiles}\Git\cmd;${:ProgramFiles}\Git\bin;C:\Python27
FrameworkDir = ${:WinDir}\Microsoft.NET\Framework64
FxTools = ${:FrameworkDir}\v3.5;${:FrameworkDir}\${:FrameworkVersion}
WindowsSdkDir = C:\Program Files (x86)\Windows Kits\10
VSINSTALLDIR = ${:ProgramFiles}\Microsoft Visual Studio 14.0
VCRoot = ${:VSINSTALLDIR}\VC
VCINSTALLDIR = ${:VCRoot}
;INCLUDE = ${:VCRoot}\Include;${:WindowsSdkDir}\Include;${:WindowsSdkDir}\Include\gl;${:VCRoot}\ATLMFC\INCLUDE
MSSdk = ${:WindowsSdkDir}
WinKitInclude = ${:WindowsSdkDir}\Include\${:WinKitVersion}
WinKitHeaders = ${:WinKitInclude}\ucrt;${:WinKitInclude}\winrt;${:WinKitInclude}\um;${:WinKitInclude}\shared;${:WinKitInclude}\cppwinrt
WinKitLibs = ${:WindowsSdkDir}\Lib\${:WinKitVersion}\ucrt\x64;${:WindowsSdkDir}\Lib\${:WinKitVersion}\um\x64
NODEBUG = 1
SdkSetupDir = ${:WindowsSdkDir}\Setup
SdkTools = ${:WindowsSdkDir}\Bin\x64
;DevEnvDir = ${:VSINSTALLDIR}\Common7\IDE
;include = ${:VCRoot}\ATLMFC\INCLUDE;${:WindowsSdkDir}\include;
INCLUDE = ${:VCRoot}\INCLUDE;${:PREFIX}\include;${:WinKitHeaders}
LIB = ${:ATLMFC_LIB};${:VSLIB};${:SDKLIB};${:PREFIX}\lib
;LIBPATH = ${:FrameworkDir};${:FrameworkDir}\${:FrameworkVersion};${:ATLMFC_LIB};${:VSLIB}
LIBPATH = ${:WinKitLibs}
Recipe = hexagonit.recipe.cmmi

PosixHomeDir=${:SystemDrive}\Cygwin\home\Administrator
GitDir = ${:PosixHomeDir}\git
GitBinDir = ${:GitDir}\bin
CygwinBinDir = ${:SystemDrive}\Cygwin\bin
PythonDir = ${:PosixHomeDir}\python
PythonBinDir = ${:PythonDir}\bin
PATH = ${:VSBIN};${:VSINSTALLDIR}\Common7\Tools;${:VSINSTALLDIR}\Common7\Tools\bin;${:FrameworkDir};${:FrameworkDir}\${:FrameworkVersion};${:FrameworkDir}\${:FrameworkVersion};${:VCRoot}\VCPackages;${:SDKBIN};${:WinDir}\system32;${:WinDir};${:WinDir}\System32\Wbem;${:GitDir}\cmd;${:GitBinDir};${:PythonBinDir};${:CygwinBinDir};${:WindowsSdkDir}\bin\x64
PREFIX = ${options:prefix}
IIPREFIX = ${options:prefix}

MSVCDIR = ${:VSINSTALLDIR}

VSINSTALLDIR = ${:ProgramFiles}\Microsoft Visual Studio 14.0
VSBIN = ${:VCRoot}\BIN\amd64
ATLMFC_LIB = ${:VCRoot}\ATLMFC\LIB\amd64
VSLIB = ${:VCRoot}\LIB\amd64
VC100CRT = C:\Windows\SysWOW64\vcruntime140.dll
VC140CRT = C:\Windows\SysWOW64\vcruntime140.dll
SDKLIB = ${:WindowsSdkDir}\lib\${:WinKitVersion}\um\x64;${:WindowsSdkDir}\lib\${:WinKitVersion}\ucrt\x64
SDKLIB32 = ${:WindowsSdkDir}\lib\${:WinKitVersion}\um\x86
SDKBIN = ${:WindowsSdkDir}\bin\x64
PerlExe = ${:CygwinBinDir}\perl.exe


[environment_dup]
LIB = ${:VCRoot}\Lib;${:WindowsSdkDir}\Lib;${:VCRoot}\ATLMFC\LIB;
Path = ${:VCRoot}\Bin;${:VCRoot}\vcpackages;${:VSINSTALLDIR}\Common7\IDE;${:WindowsSdkDir}\Bin;${:WinDir}\Microsoft.NET\Framework\${:FrameworkVersion};${:WinDir}\Microsoft.NET\Framework\${:FrameworkVersion};${:WindowsSdkDir}\Setup;${:WinDir}\system32;${:WinDir};${:WinDir}\System32\Wbem;${:ProgramFiles}\Git\cmd;${:ProgramFiles}\Git\bin;${:CygwinBinDir}

[visual-studio-2017-environment]
<= environment-windows
VSINSTALLDIR = ${:ProgramFiles64}\Microsoft Visual Studio 14.0
VCRoot = ${:VSINSTALLDIR}\VC
VSBIN = ${:VCRoot}\BIN
DevEnvDir = ${:VSINSTALLDIR}\Common7\IDE
PATH = ${:DevEnvDir};${:VSBIN};${:VSINSTALLDIR}\Common7\Tools;${:VSINSTALLDIR}\Common7\Tools\bin;${:FrameworkDir};${:FrameworkDir}\${:FrameworkVersion};${:FrameworkDir}\${:FrameworkVersion};${:VCRoot}\VCPackages;${:SDKBIN};${:WinDir}\system32;${:WinDir};${:WinDir}\System32\Wbem;${:GitDir}\cmd;${:GitBinDir};${:PythonBinDir};${:CygwinBinDir}

[options]
configure-command = true
configure-options =
make-binary = nmake
make-options = -f win32/Makefile.msc
environment-section = environment-windows
prefix = ${buildout:directory}\dist
hooks-dir = ${buildout:directory}\src\hooks

[mkdir]
recipe = z3c.recipe.mkdir
paths = dist
    dist/bin
    dist/lib
    dist/include

[zlib]
patches = ${:patches-dir}/${:name}-${:version}-windows-Makefile.patch

[xz]
# pre-built binaries used for lzma
<= options
recipe = hexagonit.recipe.cmmi
name = xz
version = 5.2.4
url = ftp://python.infinidat.com/python/sources/xz-${:version}-windows.zip
configure-command = true
make-binary = true
post-make-hook = ${options:hooks-dir}\windows.py:xz_post_make64

[openssl]
configure-command = ${environment-windows:PerlExe}
configure-options = Configure VC-WIN64A enable-zlib enable-static-engine enable-zlib-dynamic enable-capieng no-asm no-shared --prefix=${options:prefix}
make-targets = install
make-options = -f ms\nt.mak
pre-make-hook = ${options:hooks-dir}\windows.py:openssl_pre_make64
name = openssl
patches = ${:patches-dir}/${:name}-${:version}-windows-batchfile.patch

[bzip2]
configure-command = true
make-options = -f makefile.msc PREFIX=${options:prefix}
name = bzip2
patches = ${:patches-dir}/${:name}-${:version}-windows-Makefile.patch

[gettext]
# This distribution already includes libiconv libintl and gettext
<= options
   gnu
version = 0.19.4-msvc
make-options = /p:Configuration=Release;Platform=x64;MFLAGS=-MT;PREFIX=${options:prefix};OutDir=${options:prefix}\lib\ /nologo
make-binary = msbuild
make-targets =
name = gettext
post-make-hook = ${options:hooks-dir}\windows.py:gettext_post_make

[tcl]
<= options
recipe = hexagonit.recipe.cmmi
name = tcl
version = 8.6.8
url = ${urls:source}/${:name}${:version}-src.tar.gz
make-binary = true

[tcl-win]
<= options
recipe = hexagonit.recipe.cmmi
path = ${buildout:directory}\parts\tcl__compile__\${tcl:name}${tcl:version}\win
make-binary = nmake
make-options = -f Makefile.vc all OPTS=static,threads INSTALLDIR=${options:prefix}

[tk]
<= options
recipe = hexagonit.recipe.cmmi
name = tk
version = 8.6.8
url = ${urls:source}/${:name}${:version}-src.tar.gz
make-binary = true

[tk-win]
<= options
recipe = hexagonit.recipe.cmmi
path = ${buildout:directory}\parts\tk__compile__\${tk:name}${tk:version}\win
make-binary = nmake
make-options = -f Makefile.vc all OPTS=static,threads INSTALLDIR=${options:prefix} TCLDIR=${buildout:directory}\parts\tcl__compile__\${tcl:name}${tcl:version}

[sqlite3]
<= options
version = autoconf-3240000
patches = ${:patches-dir}/sqlite3-autoconf-3240000-windows-makefile.patch
make-binary = true

[sqlite3-win]
<= options
recipe = hexagonit.recipe.cmmi
path = ${buildout:directory}\parts\sqlite3__compile__\${sqlite3:name}-${sqlite3:version}\tea\win
make-binary = nmake
make-options = -f Makefile.vc all install OPTS=static,threads INSTALLDIR=${options:prefix}

[libxml2]
make-binary = true

[libxml2-win]
<= options
recipe = hexagonit.recipe.cmmi
path = ${buildout:directory}\parts\libxml2__compile__\libxml2-${libxml2:version}\win32
configure-command = cscript
configure-options = configure.js compiler=msvc cruntime=/MT prefix=${options:prefix} include=${options:prefix}\include lib=${options:prefix}\lib
make-options = -f Makefile.msvc

[libxslt]
patches = ${:patches-dir}/libxslt-${:version}-windows-Makefile.patch
make-binary = true

[libxslt-win]
<= options
recipe = hexagonit.recipe.cmmi
path = ${buildout:directory}\parts\libxslt__compile__\libxslt-${libxslt:version}\win32
configure-command = cscript
configure-options = configure.js compiler=msvc cruntime=/MT prefix=${options:prefix} include=${options:prefix}\include lib=${options:prefix}\lib
make-options = -f Makefile.msvc

[cyrus-sasl]
make-options = /f NTMakefile CFG=Release DB_INCLUDE=${options:prefix}\include DB_LIBPATH=${options:prefix}\lib OPENSSL_INCLUDE=${options:prefix}\include OPENSSL_LIBPATH=${options:prefix}\lib DB_LIB=libdb51.lib
patches = ${:patches-dir}/${:name}-${:version}-windows-Makefile.patch
    ${:patches-dir}/${:name}-${:version}-windows-plugins-Makefile.patch
    ${:patches-dir}/${:name}-${:version}-digestmd5.patch
    ${:patches-dir}/${:name}-${:version}-digestmd5.patch

[libevent]
;version = 2.0.17
make-options = -f Makefile.nmake
make-targets = static_libs
post-make-hook = ${options:hooks-dir}\windows.py:libevent_post_make

[python]
make-binary = true
patch-binary = git init && git apply --ignore-whitespace
patches = ${:patches-dir}/${:name}-${:version}-windows-Makefile.patch
    ${:patches-dir}/${:name}-${:version}-windows-Makefile-win32.patch
    ${:patches-dir}/${:name}-${:version}-sysconfig.py.patch
    ${:patches-dir}/${:name}-${:version}-distutils-sysconfig.py.patch
    ${:patches-dir}/${:name}-${:version}-pythonhome-pythonrun.c.patch
    ${:patches-dir}/${:name}-${:version}-windows-getpathp.patch
post-make-hook =

[python-win-instrumentation]
<= options
recipe = hexagonit.recipe.cmmi
path = ${buildout:directory}\parts\python__compile__\python-${python:version}\PCbuild
make-binary = msbuild
make-options = pcbuild.sln /p:Configuration=PGInstrument;Platform=x64
environment-section = environment-windows
make-targets =

[python-win]
<= python-win-instrumentation
make-options = pcbuild.sln /p:Configuration=PGUpdate;Platform=x64
post-make-hook = ${options:hooks-dir}\windows.py:python_post_make64

;[python-win-environment]
;<= environment-windows
;bsddbDir = ${options:prefix}\..\parts\db__compile__\db-5.1.25\src\db


